@hostname = localhost
@port = 3001
@host = {{hostname}}:{{port}}

@id = 1

@username = testi

@token = Bearer addTokenFromLoginHere


 
### Get blogs
GET http://{{host}}/api/blogs
Content-Type: application/json

### Get blogs with seach query
GET http://{{host}}/api/blogs?search=Title
Content-Type: application/json

### create blog
POST http://{{host}}/api/blogs
Content-Type: application/json
Authorization: {{token}}

{
    "author": "testUser", 
    "url": "url.com",
    "title": "title",
    "likes": 9001,
    "year": 1999
}

### get authors with count of blogs and sum of likes
GET http://{{host}}/api/authors
Content-Type: application/json

### Get blog with id
GET http://{{host}}/api/blogs/{{id}}


### update blog with id
PUT http://{{host}}/api/blogs/{{id}}
Content-Type: application/json

{
    "likes": "50"
}

### delete blog with id
DELETE http://{{host}}/api/blogs/{{id}}
Content-Type: application/json
Authorization: {{token}}

### Get users
GET http://{{host}}/api/users

### Get user with id
GET http://{{host}}/api/users/{{id}}

### Get user with id and where read is true
GET http://{{host}}/api/users/{{id}}?read=true

### Get user with id and where read is false
GET http://{{host}}/api/users/{{id}}?read=false
 

### create user
POST http://{{host}}/api/users
Content-Type: application/json

{
    "username": "testUser@email.com", 
    "name": "test user",
    "password": "password"
}



### update username with username
PUT http://{{host}}/api/users/{{username}}
Content-Type: application/json

{
    "username": "testUser@email.com" 
}


### login user
POST http://{{host}}/api/login
Content-Type: application/json

{
    "username": "testUser@email.com", 
    "password": "secret"
}

### logout user
POST http://{{host}}/api/logout
Authorization: {{token}}

### add blog to users reading_list
POST http://{{host}}/api/readinglists
Content-Type: application/json

{
    "userId": 1,
    "blogId": 2
}

### mark blog as read
PUT http://{{host}}/api/readinglists/{{id}}
Content-Type: application/json
Authorization: {{token}}

{
    "read": true
}




